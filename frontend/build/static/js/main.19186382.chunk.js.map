{"version":3,"sources":["components/task-list/taskSlice.js","components/user-form/userSlice.js","store.js","apis/userApi.js","components/alert/AlertDisplay.js","components/user-form/UserForm.js","components/user-form/userAction.js","components/header/Header.js","apis/taskApi.js","components/task-list/taskAction.js","components/bad-tasks-list/BadTaskList.js","components/task-list/TaskList.js","components/add-task-form/AddTaskForm.js","components/main-content/MainContent.js","App.js","reportWebVitals.js","index.js"],"names":["taskSlice","createSlice","name","initialState","taskLists","badLists","status","message","isLoading","totalHrs","taskToDelete","reducers","requestPending","state","updateTaskSuccess","payload","deleteTaskSuccess","fetchTaskListSuccess","result","reduce","subttl","item","hr","filter","toDo","setIdToDelete","checked","value","console","log","args","requestFail","reducer","actions","userSlice","userId","userName","isLoggedIn","createUserSuccess","loginUserSuccess","userLogout","store","configureStore","task","taskReducer","user","userReducer","rootUrl","postUser","newUser","a","axios","post","data","getUser","AlertDisplay","color","text","useState","show","setShow","Alert","variant","onClose","dismissible","Button","onClick","UserForm","userRefLogIn","useRef","userRefReg","useSelector","dispatch","useDispatch","className","Spinner","animation","Row","Col","md","Card","Form","Control","ref","type","placeholder","current","_id","window","localStorage","setItem","loginUser","userObj","alert","Header","getItem","removeItem","postTask","newTask","headers","Authorization","fetchAllTasks","get","deleteTasks","ids","delete","updateTasks","obj","patch","fetchTaskLists","addTask","taskSwitcher","BadTaskList","handleOnTaskBadClick","indexToDeleteFromBadTask","badHrs","subTl","Table","striped","bordered","hover","size","map","i","defaultValue","onChange","e","target","includes","id","TaskList","handleOnTaskClick","indexToDeleteFromTask","initialFormData","AddTaskForm","formData","setFormData","handleOnChange","onSubmit","preventDefault","xs","required","MainContent","useEffect","handleOnDeleteItems","App","Container","fluid","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.19186382.chunk.js","sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\nconst initialState = {\n  taskLists: [],\n  badLists: [],\n  status: \"\",\n  message: \"\",\n  isLoading: false,\n  totalHrs: 0,\n  taskToDelete: [],\n};\nconst taskSlice = createSlice({\n  name: \"taskList\",\n  initialState,\n  reducers: {\n    //list of functions to update state values\n    requestPending: (state) => {\n      state.isLoading = true;\n    },\n    updateTaskSuccess: (state, { payload: { status, message } }) => {\n      //nested destructuring\n      state.isLoading = false;\n      state.status = status;\n      state.message = message;\n    },\n    deleteTaskSuccess: (state, { payload: { status, message } }) => {\n      //nested destructuring\n      state.isLoading = false;\n      state.status = status;\n      state.message = message;\n      state.taskToDelete = [];\n    },\n    fetchTaskListSuccess: (state, { payload }) => {\n      const { status, message, result } = payload;\n      state.totalHrs = result\n        ? result.reduce((subttl, item) => subttl + +item.hr, 0)\n        : 0;\n      state.isLoading = false;\n      //   state.status = status;\n      //   state.message = message;\n      if (result) {\n        //task list only\n        state.taskLists = result.filter((item) => item.toDo);\n\n        //bad list only\n        state.badLists = result.filter((item) => !item.toDo);\n      }\n    },\n\n    setIdToDelete: (state, { payload }) => {\n      const { checked, value } = payload;\n      console.log(checked, value);\n      if (checked) {\n        //add to array\n        state.taskToDelete = [...state.taskToDelete, value];\n      } else {\n        //remove from array\n        const args = state.taskToDelete.filter((item) => item !== value);\n        state.taskToDelete = args;\n      }\n    },\n    requestFail: (state, { payload }) => {\n      const { status, message } = payload;\n      state.status = status;\n      state.message = message;\n    },\n  },\n});\n\nconst { reducer, actions } = taskSlice;\n\nexport const {\n  updateTaskSuccess,\n  requestPending,\n  fetchTaskListSuccess,\n  setIdToDelete,\n  deleteTaskSuccess,\n  requestFail,\n} = actions;\nexport default reducer;\n","import { createSlice } from \"@reduxjs/toolkit\";\nconst initialState = {\n  status: \"\",\n  message: \"\",\n  isLoading: false,\n  userId: \"\",\n  userName: \"\",\n  isLoggedIn: false,\n};\nconst userSlice = createSlice({\n  name: \"userList\",\n  initialState,\n  reducers: {\n    //list of functions to update state values\n    requestPending: (state) => {\n      state.isLoading = true;\n    },\n    createUserSuccess: (state, { payload }) => {\n      const { status, message } = payload;\n      state.status = status;\n      state.message = message;\n      state.isLoading = false;\n    },\n    loginUserSuccess: (state) => {\n      state.status = \"\";\n      state.message = \"\";\n      state.isLoading = false;\n      state.isLoggedIn = true;\n    },\n    userLogout: (state) => {\n      state.isLoggedIn = false;\n    },\n    requestFail: (state, { payload }) => {\n      const { status, message } = payload;\n      state.status = status;\n      state.message = message;\n      state.isLoading = false;\n    },\n  },\n});\n\nconst { reducer, actions } = userSlice;\n\nexport const {\n  createUserSuccess,\n  requestPending,\n  loginUserSuccess,\n  userLogout,\n  requestFail,\n} = actions;\nexport default reducer;\n","import { configureStore } from \"@reduxjs/toolkit\";\nimport taskReducer from \"./components/task-list/taskSlice\";\nimport userReducer from \"./components/user-form/userSlice\";\n\nconst store = configureStore({\n  reducer: { task: taskReducer, user: userReducer },\n});\n\nexport default store;\n","import axios from \"axios\";\nconst rootUrl =\n  process.env.NODE_ENV === \"production \"\n    ? \"/api/v1/user\"\n    : \"http://localhost:5000/api/v1/user\";\n\n//adding datat to database\nexport const postUser = async (newUser) => {\n  try {\n    const { data } = await axios.post(rootUrl + \"/register\", newUser);\n    return data;\n  } catch (error) {\n    console.log(error);\n    return {\n      status: \"error\",\n      message: error.message,\n    };\n  }\n};\n\n// login user\nexport const getUser = async (newUser) => {\n  try {\n    const { data } = await axios.post(rootUrl, newUser);\n    return data;\n  } catch (error) {\n    console.log(error);\n    return {\n      status: \"error\",\n      message: error.message,\n    };\n  }\n};\n","import React from \"react\";\nimport { useState } from \"react\";\nimport { Alert, Button } from \"react-bootstrap\";\n\nexport const AlertDisplay = ({ color, text }) => {\n  const [show, setShow] = useState(true);\n\n  if (color == \"danger\") {\n    if (show) {\n      return (\n        <Alert variant={color} onClose={() => setShow(false)} dismissible>\n          {text}!\n        </Alert>\n      );\n    }\n    return <Button onClick={() => setShow(true)}>Show Alert</Button>;\n  }\n  return <Alert variant={color}>{text}!</Alert>;\n};\n","import React, { useRef } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { Button, Card, Col, Form, Row, Spinner } from \"react-bootstrap\";\nimport { createnewUser, loginUser } from \"./userAction\";\nimport { AlertDisplay } from \"../alert/AlertDisplay\";\nexport const UserForm = () => {\n  const userRefLogIn = useRef(\"\");\n  const userRefReg = useRef(\"\");\n  const { isLoading, status, message, isLoggedIn } = useSelector(\n    (state) => state.user\n  );\n  const dispatch = useDispatch();\n  {\n    current: {\n    }\n  }\n  const handleOnLogin = () => {\n    const userName = userRefLogIn.current.value;\n    console.log(userName);\n    dispatch(loginUser({ userName }));\n  };\n  const handleOnReg = () => {\n    const userName = userRefReg.current.value;\n    if (!userName) {\n      return alert(\"username needs to be provided\");\n    }\n    dispatch(createnewUser({ userName }));\n  };\n  return (\n    <div className=\"user-form mt-5 pt-5\">\n      <h1 className=\"py-3\">Welcome to the task time management</h1>\n      <hr />\n      <div className=\"text-muted mb-3\">\n        This app will allow you to list your weekly task and let mark your task\n        as not to do so that you can see how many hours you could have saved\n        last week for good purpose.\n      </div>\n      {message && (\n        <AlertDisplay\n          color={status === \"success\" ? \"success\" : \"danger\"}\n          text={message}\n        />\n      )}\n      {isLoading && <Spinner variant=\"info\" animation=\"border\" />}\n      <Row>\n        <Col md=\"6\">\n          <Card className=\"p-3\">\n            <h2 className=\"mb-3\">Login</h2>\n            <hr />\n            <Form.Control\n              ref={userRefLogIn}\n              type=\"email\"\n              placeholder=\"Enter userName\"\n            />\n\n            <Button\n              variant=\"success\"\n              type=\"submit\"\n              className=\"mt-3\"\n              onClick={handleOnLogin}\n            >\n              Login\n            </Button>\n          </Card>\n        </Col>\n        <Col md=\"6\">\n          <Card className=\"p-3\">\n            <h2 className=\"mb-3\">Register</h2>\n            <hr />\n            <Form.Control\n              ref={userRefReg}\n              type=\"email\"\n              placeholder=\"Enter userName\"\n            />\n            <Button\n              variant=\"primary\"\n              type=\"submit\"\n              className=\"mt-3\"\n              onClick={handleOnReg}\n            >\n              Register\n            </Button>\n          </Card>\n        </Col>\n      </Row>\n    </div>\n  );\n};\n\nexport default UserForm;\n","import {\n  createUserSuccess,\n  requestPending,\n  requestFail,\n  loginUserSuccess,\n  userLogout,\n} from \"./userSlice\";\nimport { postUser, getUser } from \"../../apis/userApi\";\n\n//create new user in database\nexport const createnewUser = (userObj) => async (dispatch) => {\n  dispatch(requestPending());\n  //call api\n  const data = await postUser(userObj);\n  if (data.status === \"success\") {\n    dispatch(createUserSuccess(data));\n    return;\n  }\n\n  dispatch(requestFail(data));\n};\n//login user\nexport const loginUser = (userName) => async (dispatch) => {\n  dispatch(requestPending());\n  //call api\n  const data = await getUser(userName);\n  console.log(data, \"log in user \");\n  if (data?.result?._id) {\n    const { _id, userName } = data.result;\n    window.localStorage.setItem(\"_id\", _id);\n    window.localStorage.setItem(\"userName\", userName);\n    dispatch(loginUserSuccess(data));\n    return;\n  }\n  dispatch(requestFail(data));\n};\n\n//logout user\n\nexport const logOut = () => (dispatch) => {\n  window.localStorage.removeItem(\"_id\");\n  window.localStorage.removeItem(\"userName\");\n  dispatch(userLogout());\n};\n","import React from \"react\";\nimport { Button } from \"react-bootstrap\";\nimport { logOut } from \"../user-form/userAction\";\nimport { useDispatch } from \"react-redux\";\nexport const Header = () => {\n  const dispatch = useDispatch();\n  const userName = window.localStorage.getItem(\"userName\");\n  const handleOnLogout = () => {\n    dispatch(logOut());\n  };\n  return (\n    <div className=\"bg-promary d-flex justify-content-end p-3 text-light\">\n      <h3 className=\"welcome-msg\">Welcome {userName}</h3>\n      <Button onClick={handleOnLogout} variant=\"warning\">\n        Logout\n      </Button>\n    </div>\n  );\n};\n","import axios from \"axios\";\nconst rootUrl =\n  process.env.NODE_ENV === \"production\"\n    ? \"/api/v1/task\"\n    : \"http://localhost:5000/api/v1/task\";\n\n//adding datat to database\nexport const postTask = async (newTask) => {\n  try {\n    const { data } = await axios.post(rootUrl, newTask, {\n      headers: {\n        Authorization: window.localStorage.getItem(\"_id\"),\n      },\n    });\n    return data;\n  } catch (error) {\n    console.log(error);\n    return {\n      status: \"error\",\n      message: error.message,\n    };\n  }\n};\n\n//fetch all the tasks from database\nexport const fetchAllTasks = async () => {\n  try {\n    const { data } = await axios.get(rootUrl, {\n      headers: {\n        Authorization: window.localStorage.getItem(\"_id\"),\n      },\n    });\n    return data;\n  } catch (error) {\n    return {\n      status: \"error\",\n      message: error.message,\n    };\n  }\n};\n//delete\nexport const deleteTasks = async (ids) => {\n  try {\n    const { data } = await axios.delete(rootUrl, {\n      headers: {\n        Authorization: window.localStorage.getItem(\"_id\"),\n      },\n      data: ids,\n    });\n    return data;\n  } catch (error) {\n    return {\n      status: \"error\",\n      message: error.message,\n    };\n  }\n};\n\n//update tasks\nexport const updateTasks = async (obj) => {\n  try {\n    const { data } = await axios.patch(rootUrl, obj, {\n      headers: {\n        Authorization: window.localStorage.getItem(\"_id\"),\n      },\n    });\n    return data;\n  } catch (error) {\n    return {\n      status: \"error\",\n      message: error.message,\n    };\n  }\n};\n","import {\n  requestPending,\n  requestFail,\n  fetchTaskListSuccess,\n  updateTaskSuccess,\n  deleteTaskSuccess,\n} from \"./taskSlice\";\nimport {\n  fetchAllTasks,\n  postTask,\n  updateTasks,\n  deleteTasks,\n} from \"../../apis/taskApi\";\n//fetching all the tasks from server\nexport const fetchTaskLists = () => async (dispatch) => {\n  dispatch(requestPending());\n  const data = await fetchAllTasks();\n  console.log(data);\n  data.status === \"success\"\n    ? dispatch(fetchTaskListSuccess(data))\n    : dispatch(requestFail(data));\n};\n\n//update new task in database\n\nexport const addTask = (newTask) => async (dispatch) => {\n  dispatch(requestPending());\n  const data = await postTask(newTask);\n  console.log(data);\n\n  if (data.status === \"success\") {\n    dispatch(updateTaskSuccess(data));\n    dispatch(fetchTaskLists());\n  } else {\n    dispatch(requestFail(data));\n  }\n};\n\n//switch tasks between the lists\n\nexport const taskSwitcher = (obj) => async (dispatch) => {\n  dispatch(requestPending());\n\n  const data = await updateTasks(obj);\n  console.log(data);\n  if (data.status === \"success\") {\n    dispatch(updateTaskSuccess(data));\n    dispatch(fetchTaskLists());\n  } else {\n    dispatch(requestFail(data));\n  }\n};\n\nexport const handleOnDeleteItems = (taskToDelete) => async (dispatch) => {\n  dispatch(requestPending());\n  const data = await deleteTasks(taskToDelete);\n  console.log(data);\n  if (data.status === \"success\") {\n    dispatch(deleteTaskSuccess(data));\n    dispatch(fetchTaskLists());\n  } else {\n    dispatch(requestFail(data));\n  }\n};\n","import React from \"react\";\nimport { useState } from \"react\";\nimport { TaskList } from \"../task-list/TaskList\";\nimport { Table, Button, Alert } from \"react-bootstrap\";\nimport { AlertDisplay } from \"../alert/AlertDisplay\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { taskSwitcher } from \"../task-list/taskAction\";\nimport { setIdToDelete } from \"../task-list/taskSlice\";\n\nexport const BadTaskList = ({\n  handleOnTaskBadClick,\n  indexToDeleteFromBadTask,\n}) => {\n  const { badLists, taskToDelete } = useSelector((state) => state.task);\n  const dispatch = useDispatch();\n  const badHrs = badLists.reduce((subTl, item) => subTl + item.hr, 0);\n  return (\n    <div>\n      <h2>Bad Task List</h2>\n      <Table striped bordered hover size=\"sm\">\n        <thead>\n          <tr>\n            <th>Task</th>\n            <th>Hours</th>\n            <th>Action</th>\n          </tr>\n        </thead>\n        <tbody>\n          {badLists.map((item, i) => (\n            <tr key={i}>\n              <td>\n                <input\n                  type=\"checkbox\"\n                  defaultValue={item._id}\n                  onChange={(e) => dispatch(setIdToDelete(e.target))}\n                  checked={taskToDelete.includes(item._id)}\n                />{\" \"}\n                <label>{item.task}</label>\n              </td>\n              <td>{item.hr}</td>\n              <td>\n                <Button\n                  onClick={() =>\n                    dispatch(taskSwitcher({ id: item._id, toDo: true }))\n                  }\n                  type=\"submit\"\n                >\n                  Mark As To Do\n                </Button>\n              </td>\n            </tr>\n          ))}\n        </tbody>\n      </Table>\n      <AlertDisplay\n        color=\"info\"\n        text={`You could have saved ${badHrs} hrs/week`}\n      />\n    </div>\n  );\n};\n","import React from \"react\";\nimport { useState } from \"react\";\nimport { Table, Button } from \"react-bootstrap\";\nimport { BadTaskList } from \"../bad-tasks-list/BadTaskList\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { taskSwitcher } from \"./taskAction\";\nimport { setIdToDelete } from \"./taskSlice\";\n\nexport const TaskList = ({ handleOnTaskClick, indexToDeleteFromTask }) => {\n  // console.log(tasks, \" from taskLists\");\n  // const [exitData, setExitData] = useState([]);\n\n  // const handleOnClick = (i) => {\n  //   console.log(tasks[i]);\n  //   const { name, value } = tasks[i];\n  //   setExitData({ ...exitData, [name]: value });\n  //   handleSubmit(exitData);\n  // };\n  const dispatch = useDispatch();\n  const { taskLists, taskToDelete } = useSelector((state) => state.task);\n  return (\n    <div>\n      <h2>Task List</h2>\n      <Table striped bordered hover size=\"sm\">\n        <thead>\n          <tr>\n            <th>Task</th>\n            <th>Hours</th>\n            <th>Action</th>\n          </tr>\n        </thead>\n        <tbody>\n          {taskLists.map((item, i) => (\n            <tr key={i}>\n              <td>\n                <input\n                  type=\"checkbox\"\n                  defaultValue={item._id}\n                  onChange={(e) => dispatch(setIdToDelete(e.target))}\n                  checked={taskToDelete.includes(item._id)}\n                />{\" \"}\n                <label>{item.task}</label>\n              </td>\n              <td>{item.hr}</td>\n              <td>\n                <Button\n                  onClick={() =>\n                    dispatch(taskSwitcher({ id: item._id, toDo: false }))\n                  }\n                >\n                  Mark As Not To Do\n                </Button>\n              </td>\n            </tr>\n          ))}\n        </tbody>\n      </Table>\n    </div>\n  );\n};\n","import { useState } from \"react\";\nimport { Col, Row, Button, Form } from \"react-bootstrap\";\nimport React from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { addTask } from \"../task-list/taskAction\";\nimport { requestFail } from \"../task-list/taskSlice\";\n\nconst initialFormData = {\n  task: \"Watching TV\",\n  hr: 10,\n};\nconst totalHrsPerWeek = 168;\nexport const AddTaskForm = () => {\n  const dispatch = useDispatch();\n  const [formData, setFormData] = useState(initialFormData);\n  const { totalHrs } = useSelector((state) => state.task);\n  const handleOnChange = (e) => {\n    const { name, value } = e.target;\n\n    setFormData({\n      ...formData,\n      [name]: value,\n    });\n  };\n\n  const handleOnSubmit = (e) => {\n    e.preventDefault();\n    if (totalHrs + +formData.hr > totalHrsPerWeek) {\n      dispatch(\n        requestFail({\n          status: \"error\",\n          message: \"You don't have enough hours left\",\n        })\n      );\n      return;\n    }\n    const userId = window.localStorage.getItem(\"_id\");\n    userId && dispatch(addTask({ ...formData, userId }));\n    dispatch(addTask(formData));\n  };\n  return (\n    <Form onSubmit={handleOnSubmit}>\n      <Row>\n        <Col xs={7}>\n          <Form.Control\n            name=\"task\"\n            placeholder=\"Task\"\n            value={formData.task}\n            required\n            onChange={handleOnChange}\n          />\n        </Col>\n        <Col>\n          <Form.Control\n            name=\"hr\"\n            placeholder=\"Hours\"\n            value={formData.hr}\n            type=\"number\"\n            required\n            onChange={handleOnChange}\n          />\n        </Col>\n        <Col>\n          <Button type=\"submit\">Add Task</Button>\n        </Col>\n      </Row>\n    </Form>\n  );\n};\n","import { useEffect } from \"react\";\n\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { AlertDisplay } from \"../alert/AlertDisplay\";\nimport { TaskList } from \"../task-list/TaskList\";\nimport { BadTaskList } from \"../bad-tasks-list/BadTaskList\";\nimport { AddTaskForm } from \"../add-task-form/AddTaskForm\";\nimport { fetchTaskLists, handleOnDeleteItems } from \"../task-list/taskAction\";\n\nimport { Container, Col, Row, Button, Spinner } from \"react-bootstrap\";\n\nexport const MainContent = () => {\n  const dispatch = useDispatch();\n  const { totalHrs, isLoading, status, message, taskToDelete } = useSelector(\n    (state) => state.task\n  );\n  useEffect(() => {\n    dispatch(fetchTaskLists());\n  }, []);\n  const ttlPwk = 168;\n\n  return (\n    <div>\n      <Row className=\"mt-5\">\n        <Col>\n          {\" \"}\n          <h1>Not To Do Task List</h1>\n        </Col>\n      </Row>\n      <hr />\n\n      {message && (\n        <AlertDisplay\n          color={status === \"success\" ? \"success\" : \"danger\"}\n          text={message}\n        />\n      )}\n\n      <AddTaskForm />\n      {isLoading && <Spinner variant=\"danger\" animation=\"grow\" />}\n      <hr />\n      <Row>\n        <Col md=\"6\">\n          <TaskList />\n        </Col>\n        <Col md=\"6\">\n          <BadTaskList />\n        </Col>\n      </Row>\n      <Row>\n        <Col>\n          <Button\n            onClick={() => dispatch(handleOnDeleteItems(taskToDelete))}\n            variant=\"danger\"\n            className=\"btn-block\"\n          >\n            Delete\n          </Button>\n        </Col>\n      </Row>\n      <Row>\n        <Col>\n          <AlertDisplay\n            color=\"info\"\n            text={`Total hours allocated = ${totalHrs} hours/week`}\n          />\n        </Col>\n      </Row>\n    </div>\n  );\n};\n","import \"./App.css\";\n\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { useEffect } from \"react\";\nimport { Container } from \"react-bootstrap\";\nimport { loginUserSuccess } from \"./components/user-form/userSlice\";\nimport { UserForm } from \"./components/user-form/UserForm\";\nimport { Header } from \"./components/header/Header\";\nimport { MainContent } from \"./components/main-content/MainContent\";\nconst App = () => {\n  const dispatch = useDispatch();\n  const { isLoggedIn } = useSelector((state) => state.user);\n  useEffect(() => {\n    if (!isLoggedIn && window.localStorage.getItem(\"userName\")) {\n      dispatch(loginUserSuccess());\n    }\n  }, []);\n  //mark task list to bad list\n\n  return (\n    <div>\n      {isLoggedIn && <Header />}\n      <Container fluid className=\"text-center\">\n        {isLoggedIn ? <MainContent /> : <UserForm />}\n      </Container>\n    </div>\n  );\n};\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport store from \"./store.js\";\nimport { Provider } from \"react-redux\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}